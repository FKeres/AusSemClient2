@page "/"
@inject HomeService HomeService
@rendermode InteractiveServer


<PageTitle>Customer List</PageTitle>

<h3>Customers and Service Visits</h3>

<button class="btn btn-success" @onclick="ShowAddCustomerDialog">Add Customer</button>
<button class="btn btn-info" @onclick="ShowFindByIdDialog">Find by ID</button>
<button class="btn btn-info" @onclick="ShowFindByEcvDialog">Find by EČV</button>

<div class="container mt-4">
    @if (_customers.Any())
    {
        <div class="row">
            @foreach (var customer in _customers)
            {
                <div class="col-md-6 mb-3">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">
                                Customer: 
                                <input class="form-control form-control-sm d-inline w-auto" value="@customer.Id" readonly />
                                <input class="form-control form-control-sm d-inline w-auto" value="@customer.Ecv" readonly/>
                                <input class="form-control form-control-sm d-inline w-auto" value="@customer.Name" readonly/>
                                <input class="form-control form-control-sm d-inline w-auto" value="@customer.LastName" readonly/>
                            </h5>
                            <hr />
                            <h6>Service Visits:</h6>
                            @if (customer.ServiceVisit.Any())
                            {
                                <ul class="list-group">
                                    @for (int i = 0; i < customer.ValidServiceNum; ++i)
                                    {   
                                        int index = i;
                                        <li class="list-group-item">
                                            <button class="btn btn-primary btn-sm mt-3" @onclick="() => ShowUpdateServDialog(customer, index)">
                                                Update Service Visit
                                            </button>
                                            <div class="mb-2">
                                                <strong>Date:</strong>
                                                <input type="date" class="form-control form-control-sm" value="@customer.ServiceVisit[i].Date.ToString("yyyy-MM-dd")" readonly/>
                                            </div>
                                            <div class="mb-2">
                                                <strong>Price:</strong>
                                                <input type="number" class="form-control form-control-sm" value="@customer.ServiceVisit[i].Price" readonly/>
                                            </div>
                                            @for (int j = 0; j < customer.ServiceVisit[i].ValidDesc; ++j)
                                            {
                                                <div class="mb-2">
                                                    <strong>Description @j:</strong>
                                                    <textarea class="form-control form-control-sm" readonly>@customer.ServiceVisit[i].Description[j]</textarea>
                                                </div>
                                            }
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted">No service visits available.</p>
                            }

                            @if (customer.ValidServiceNum < customer.ServiceVisit.Length)
                            {
                                <button class="btn btn-success btn-sm mt-3" @onclick="() => ShowAddServiceVisitDialog(customer)">
                                    Add Service Visit
                                </button>
                            }
                             <button class="btn btn-primary btn-sm mt-3" @onclick="() => ShowUpdateCustomerDialog(customer)">
                                Update Customer
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            No customers available.
        </div>
    }
</div>

<AddDialog 
    IsVisible="@isAddDialogVisible" 
    CustomerId="@_id" 
    Ecv="@_ecv" 
    CustomerName="@_name" 
    CustomerLastName="@_lastName"
    OnClose="CloseAddCustomerDialog"
    OnSubmit="AddCustomer" />

<AddServiceVisitDialog 
    IsVisible="@isAddServiceVisitDialogVisible" 
    CustomerId="@_id" 
    Ecv="@_ecv" 
    Date="@_date" 
    Price="@_price"
    Description1="@_description1"
    Description2="@_description2"
    Description3="@_description3"
    Description4="@_description4"
    Description5="@_description5"
    Description6="@_description6"
    Description7="@_description7"
    Description8="@_description8"
    Description9="@_description9"
    Description10="@_description10"
    OnClose="CloseAddServiceVisitDialog"
    OnSubmit="AddServiceVisit" />

<FindByIdDialog
    @bind-IsVisible="isFindByIdDialogVisible"  
    CustomerId="@_id" 
    OnClose="CloseFindByIdDialog"
    OnSubmit="FindById" />

<FindByEcvDialog
    @bind-IsVisible="isFindByEcvDialogVisible"   
    Ecv="@_ecv" 
    OnClose="CloseFindByEcvDialog"
    OnSubmit="FindByEcv" />

<UpdateDialog
    IsVisible="@isUpdateCustomerDialogVisible"    
    Customer="@_editedCustomer" 
    OnClose="CloseUpdateCustomerDialog"
    OnSubmit="UpdateCustomer" />

<UpdateServVisitDialog
    IsVisible="@isUpdateServDialogVisible"    
    Id="@_editServ.Id"
    Date="@_editServ.Date"
    Price="@_editServ.Price"
    Description1="@_description1"
    Description2="@_description2"
    Description3="@_description3"
    Description4="@_description4"
    Description5="@_description5"
    Description6="@_description6"
    Description7="@_description7"
    Description8="@_description8"
    Description9="@_description9"
    Description10="@_description10"
    OnClose="CloseUpdateServDialog"
    OnSubmit="UpdateServiceVisit" />

@code {
    private List<Customer> _customers = new();
    private Customer _editedCustomer = new();
    private static ServiceVisit _unused = new();
    private ServiceVisit _editServ = _unused.CreateInstance();
    private int _editedServNo = -1;

    private bool isAddDialogVisible = false;
    private bool isFindByIdDialogVisible = false;
    private bool isFindByEcvDialogVisible = false;
    private bool isAddServiceVisitDialogVisible = false;
    private bool isUpdateCustomerDialogVisible = false;
    private bool isUpdateServDialogVisible = false;

    private int _id = 0;
    private string _ecv = "";
    private string _name = "";
    private string _lastName = "";

    private DateTime _date { get; set; } = DateTime.MinValue;
    private double _price { get; set; } = 0.0;
    private string _description1 { get; set; } = "";
    private string _description2 { get; set; } = "";
    private string _description3 { get; set; } = "";
    private string _description4 { get; set; } = "";
    private string _description5 { get; set; } = "";
    private string _description6 { get; set; } = "";
    private string _description7 { get; set; } = "";
    private string _description8 { get; set; } = "";
    private string _description9 { get; set; } = "";
    private string _description10 { get; set; } = "";


    public void AddCustomer(Customer customer) {
        HomeService.Add(customer.Id, customer.Ecv, customer.Name, customer.LastName);

        isAddDialogVisible = false;
        StateHasChanged();
    }

    public void FindById(int customerId) {
        _customers.Clear();
        _id = customerId;
        _customers.Add(HomeService.FindById(_id));

        isFindByIdDialogVisible = false;
        StateHasChanged();
    }

    public void FindByEcv(string ecv) {
        _customers.Clear();
        _customers.Add(HomeService.FindByEcv(ecv));

        isFindByEcvDialogVisible = false;
        StateHasChanged();
    }

    public void AddServiceVisit(ServiceVisit servVisit) {
        _editedCustomer.AddServVisit(servVisit);
        HomeService.UpdateCustomer(_editedCustomer);
    }

    public void UpdateCustomer(Customer customer) {
        _editedCustomer = customer;
        HomeService.UpdateCustomer(_editedCustomer);
    }

    public void UpdateServiceVisit(ServiceVisit serviceVisit) {
        _editServ.CopyFrom(serviceVisit);
        _editedCustomer.ServiceVisit[_editedServNo].CopyFrom(_editServ);
        HomeService.UpdateCustomer(_editedCustomer);
    }

    void ShowAddCustomerDialog()
    {
        _id = 0;
        _ecv = "";
        _name = "";
        _lastName = "";

        isAddDialogVisible = true;
        StateHasChanged();
    }

     void CloseAddCustomerDialog()
    {
        isAddDialogVisible = false;
        StateHasChanged();
    }

    void ShowFindByIdDialog()
    {
        _id = 0;

        isFindByIdDialogVisible = true;
        StateHasChanged();
    }

     void CloseFindByIdDialog()
    {
        isFindByIdDialogVisible = true;
        StateHasChanged();
    }

    void ShowFindByEcvDialog()
    {
        _ecv = "";

        isFindByEcvDialogVisible = true;
        StateHasChanged();
    }

     void CloseFindByEcvDialog()
    {
        isFindByEcvDialogVisible = true;
        StateHasChanged();
    }

    void ShowAddServiceVisitDialog(Customer customer)
    {
        _editedCustomer = customer;
        _id = customer.Id;
        _ecv = customer.Ecv;

        _description1 = "";
        _description2 = "";
        _description3 = "";
        _description4 = "";
        _description5  = "";
        _description6 = "";
        _description7  = "";
        _description8  = "";
        _description9 = "";
        _description10  = "";


        isAddServiceVisitDialogVisible = true;
        StateHasChanged();
    }

    void CloseAddServiceVisitDialog()
    {
        isAddServiceVisitDialogVisible = false;
        StateHasChanged();
    }

    void ShowUpdateCustomerDialog(Customer customer) {
        _editedCustomer = customer;
        isUpdateCustomerDialogVisible = true;
        StateHasChanged();
    }

    void CloseUpdateCustomerDialog()
    {
        isUpdateCustomerDialogVisible = false;
        StateHasChanged();
    }

    void ShowUpdateServDialog(Customer customer, int servNo) {
        _editedCustomer = customer;
        _editServ = customer.ServiceVisit[servNo];
        _editedServNo = servNo;
        _description1 = customer.ServiceVisit[servNo].Description[0];
        _description2 = customer.ServiceVisit[servNo].Description[1];
        _description3 = customer.ServiceVisit[servNo].Description[2];
        _description4 = customer.ServiceVisit[servNo].Description[3];
        _description5  = customer.ServiceVisit[servNo].Description[4];
        _description6 = customer.ServiceVisit[servNo].Description[5];
        _description7  = customer.ServiceVisit[servNo].Description[6];
        _description8  = customer.ServiceVisit[servNo].Description[7];
        _description9 = customer.ServiceVisit[servNo].Description[8];
        _description10  = customer.ServiceVisit[servNo].Description[9];
        isUpdateServDialogVisible = true;
        StateHasChanged();
    }

    void CloseUpdateServDialog()
    {
        isUpdateServDialogVisible = false;
        StateHasChanged();
    }
}