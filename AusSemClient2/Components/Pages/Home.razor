@page "/"
@inject HomeService HomeService
@rendermode InteractiveServer


<PageTitle>Customer List</PageTitle>

<h3>Customers and Service Visits</h3>

<button class="btn btn-primary" @onclick="ShowAddCustomerDialog">Add Customer</button>
<button class="btn btn-info" @onclick="ShowFindByIdDialog">Find by ID</button>
<button class="btn btn-info" @onclick="ShowFindByEcvDialog">Find by EČV</button>

<div>
    @if (_customers.Any())
    {
        <ul>
            @foreach (var customer in _customers)
            {
                <li>
                    <strong>@customer.Id @customer.Ecv @customer.Name @customer.LastName</strong>
                    <ul>
                        @if (customer.ServiceVisit.Any())
                        {
                            @for(int i = 0; i < customer.ValidServiceNum; ++i)
                            {
                                <li>
                                    <strong>Date:</strong> @customer.ServiceVisit[i].Date <br />
                                    <strong>Price:</strong> @customer.ServiceVisit[i].Price
                                    @for(int j = 0; j < customer.ServiceVisit[i]._validDesc; ++j) {
                                        <strong>Description @j:</strong> @customer.ServiceVisit[i].Description[j];
                                    }
                                </li>
                            }
                        }
                        else
                        {
                            <li>No service visits available.</li>
                        }
                    </ul>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No customers available.</p>
    }
</div>

<AddDialog 
    IsVisible="@isAddDialogVisible" 
    CustomerId="@_id" 
    Ecv="@_ecv" 
    CustomerName="@_name" 
    CustomerLastName="@_lastName"
    OnClose="CloseAddCustomerDialog"
    OnSubmit="AddCustomer" />

<FindByIdDialog
    IsVisible="@isFindByIdDialogVisible" 
    CustomerId="@_id" 
    OnClose="CloseFindByIdDialog"
    OnSubmit="FindById" />

<FindByEcvDialog
    IsVisible="@isFindByEcvDialogVisible" 
    CustomerId="@_ecv" 
    OnClose="CloseFindByEcvDialog"
    OnSubmit="FindByEcv" />

@code {
    private List<Customer> _customers = new();

    private bool isAddDialogVisible = false;
    private bool isFindByIdDialogVisible = false;
    private bool isFindByEcvDialogVisible = false;

    private int _id = 0;
    private string _ecv = "";
    private string _name = "";
    private string _lastName = "";

    public void AddCustomer() {
        HomeService.Add(_id, _ecv, _name, _lastName);

        isAddDialogVisible = false;
        StateHasChanged();
    }

    public void FindById() {
        _customers.Add(HomeService.FindById(_id));

        isFindByIdDialogVisible = true;
        StateHasChanged();
    }

    public void FindByEcv() {
        _customers.Add(HomeService.FindByEcv(_ecv));

        isFindByEcvDialogVisible = true;
        StateHasChanged();
    }

    void ShowAddCustomerDialog()
    {
        _id = 0;
        _ecv = "";
        _name = "";
        _lastName = "";

        isAddDialogVisible = true;
        StateHasChanged();
    }

     void CloseAddCustomerDialog()
    {
        isAddDialogVisible = false;
        StateHasChanged();
    }

    void ShowFindByIdDialog()
    {
        _id = 0;

        isFindByIdDialogVisible = true;
        StateHasChanged();
    }

     void CloseFindByIdDialog()
    {
        isFindByIdDialogVisible = true;
        StateHasChanged();
    }

    void ShowFindByEcvDialog()
    {
        _ecv = "";

        isFindByEcvDialogVisible = true;
        StateHasChanged();
    }

     void CloseFindByEcvDialog()
    {
        isFindByEcvDialogVisible = true;
        StateHasChanged();
    }
}